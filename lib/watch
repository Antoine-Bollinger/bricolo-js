#!/usr/bin/env node
const fs = require('fs')
const path = require('path')
const concurrently = require('concurrently')

const defaultConfigPath = path.join(__dirname, '../config.json')
let config = JSON.parse(fs.readFileSync(defaultConfigPath, 'utf8'))

const userConfigPath = path.join(process.cwd(), 'bricoloconfig.json')
if (fs.existsSync(userConfigPath)) {
    const userConfig = JSON.parse(fs.readFileSync(userConfigPath), 'utf8')
    config = { ...config, ...userConfig }
}

const phpServerPort = config.phpServer.port || 8000

function runDevEnvironment() {
    console.log('Starting development environment...')
    try {
        concurrently([
            { command: `npx esbuild ${config.jsBuild.entry} --outfile=${config.jsBuild.output} --watch --bundle --minify`, name: 'JS Watch', prefixColor: 'yellow' },
            { command: `npx sass --watch ${config.sassBuild.entry}:${config.sassBuild.output} --style compressed`, name: 'SASS Watch', prefixColor: 'magenta' },
            { command: `npx wait-on http://localhost:${phpServerPort} && npx browser-sync start --proxy "localhost:${phpServerPort}" --port ${config.server.port} --files ${config.watch.directories.join(',')}`, name: 'LiveReload', prefixColor: 'green' }
        ], {
            prefix: 'name',
            killOthers: ['failure', 'success'],
            restartTries: 3,
            shell: true
        })
    } catch (error) {
        console.error(error)
    }
}

runDevEnvironment()